{
    "include <>": {
		"prefix": "include<",
		"body": "#include <${stdio.h}>"
	},

    "define": {
      "prefix": "xdef",
      "body": "#define ${1} (${2})",
      "description": "Code snippet for define"
    },

	"printf": {
		"prefix": "print",
		"body": "printf(\"${1}\",${0});"
	},

	"scanf": {
		"prefix": "scanf",
		"body": "scanf(\"${1}\",${0});"
	},
	"for": {
		"prefix": "forplus",
		"body": [
			"for (${int} ${i} = ${1:0}; ${i} < ${length}; ${i}+=1)",
			"{",
			"	$2",
			"}"
		],
		"description": "Code snippet for 'for' loop"
	},
	"forr": {
		"prefix": "forminus",
		"body": [
			"for (int ${i} = ${length} - 1; ${i} >= 0; ${i}-=1)",
			"{",
			"	$1",
			"}"
		],
		"description": "Code snippet for reverse 'for' loop"
	},
	"while": {
		"prefix": "while",
		"body": [
			"while ($1)",
			"{",
			"	$2",
			"}"
		],
		"description": ""
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ($1)",
			"{",
			"	$2",
			"}"
		],
		"description": "Code snippet for if statement"
	},
	"else": {
		"prefix": "else",
		"body": [
			"else",
			"{",
			"	$1",
			"}"
		],
		"description": "Code snippet for else statement"
	},
	"enum": {
		"prefix": "enum",
		"body": [
			"enum ${MyEnum}",
			"{",
			"	$1",
			"};"
		],
		"description": "Code snippet for enum"
	},
	"#ifdef": {
		"prefix": "ifdef",
		"body": [
			"#ifdef ${DEBUG}",
			"$1",
			"#endif // ${DEBUG}"
		],
		"description": "Code snippet for #ifdef"
	},
	"#ifndef": {
		"prefix": "ifndef",
		"body": [
			"#ifdef ${1:1}",
			"$2",
			"#endif // !$1"
		],
		"description": "Code snippet for #ifndef"
	},
	"struct": {
		"prefix": "struct",
		"body": [
			"struct ${MyStruct}",
			"{",
			"	$1",
			"};"
		],
		"description": "Code snippet for struct"
	},
	"switch": {
		"prefix": "switch",
		"body": [
			"switch (${switch_on})",
			"{",
			"default:",
			"	break;$1",
			"}"
		],
		"description": "Code snippet for switch statement"
	},
	"union": {
		"prefix": "union",
		"body": [
			"union ${MyUnion}",
			"{",
			"	$1",
			"};"
		],
		"description": "Code snippet for union"
	}
}