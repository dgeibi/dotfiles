#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

HISTSIZE=2000
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"
PS1='[\u@\h \W]\$ '

export Code_Dir=${HOME}/code
export HISTCONTROL=ignoreboth
export XDG_CONFIG_HOME=${HOME}/.config
export VISUAL="nvim"
export NVM_DIR="${HOME}/.nvm"

[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# autocd
shopt -s autocd

shopt -s checkwinsize

if [ -e /usr/share/terminfo/x/xterm-256color ] && [ "$COLORTERM" == "xfce4-terminal" ]; then
    export TERM=xterm-256color
fi

# fzf
[ -f "${HOME}/.fzf.bash" ] && source "${HOME}/.fzf.bash"

export FZF_DEFAULT_OPTS='
  --bind ctrl-f:page-down,ctrl-b:page-up
  --color=light,fg:232,bg:255,bg+:116,info:27
'

#PATH
PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
PATH="/usr/local/heroku/bin:$PATH"

#thefuck
eval $(thefuck --alias)


#alias
alias disk='df -hl'
alias sudo='sudo '
alias lm='ls -al'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias vi=nvim
alias vim=nvim
alias uusbc='udisksctl unmount -b /dev/sdc1 && udisksctl power-off -b /dev/sdc'
alias note="cd ${HOME}/code/Dropbox/Note"

export PROMPT_COMMAND="history -a"

#source
source /etc/profile.d/autojump.bash
for SCRIPTS in ${HOME}/code/dotfiles/src/*; do
    source $SCRIPTS
done

restart() {
    . ~/.bashrc
}

#vscode
code() {
 # visual-studio-code $1 &> /dev/null
  visual-studio-code "$@" &> /dev/null &
  disown
}

### mount ntfs
ntfs() {
    case $1 in
        c) [ ! -e /media/c/ ] && sudo mkdir -p /media/c; sudo ntfs-3g /dev/sda3 /media/c ;;
        #d) [ ! -e /media/d/ ] && sudo mkdir -p /media/d; sudo ntfs-3g /dev/sdb1 /media/d ;;
        uc) sudo umount /media/c ;;
        #ud) sudo umount /media/d ;;
        *) echo "Usage: ntfs {c,uc}"
    esac
}

checknet() {
    ping -c 4 114.114.114.114
    echo -e "\n"
    tcping www.google.com 443
}

update() {
    sudo -v
    pacaur -u
    uwechat
    sudo pacman -Syu
    nvim +PlugUpgrade +PlugUpdate +qa
    cd "$NVM_DIR" && git fetch origin && git checkout `git describe --abbrev=0 --tags` && cd -
}

syscheck() {
    systemd-analyze
    echo -e "\nJournal Errors"
    journalctl -p 3 -xb
    echo -e "\nsytemd failed"
    systemctl --failed
}

format() {
    sed -i -e 's/[ \t]*$//' -e 's/\t/    /g' "$@"
    for each in "$@"
    do
        if [[ "$each" = *.c ]]; then
            astyle --style=kr -n "$each"
        fi
    done
}

take() {
    if [ -n "$1" ]; then
        mkdir -p "$1"
        cd "$1" || exit
    fi
}

gdiff() {
    if [ -n "$1" ] && [ -n "$2" ]; then
        git diff --no-index --word-diff "$1" "$2"
    else
        echo "Usage: gdiff <old_file> <new_file>"
    fi
}

roll() {
    echo $(head -n1 /var/log/pacman.log | cut -d " " -f 1,2) 以来一共滚了 $(grep -c "full system upgrade" /var/log/pacman.log) 次
}
