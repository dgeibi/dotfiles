#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

HISTSIZE=2000
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"
PS1='[\u@\h \W]\$ '

export home=/home/dgeibi
export Code_Dir=$home/code
export HISTCONTROL=ignoreboth
export XDG_CONFIG_HOME=$home/.config
export VISUAL="nvim"

# autocd
shopt -s autocd

shopt -s checkwinsize

if [ -e /usr/share/terminfo/x/xterm-256color ] && [ "$COLORTERM" == "xfce4-terminal" ]; then
    export TERM=xterm-256color
fi

# fzf
[ -f $home/.fzf.bash ] && source $home/.fzf.bash

export FZF_DEFAULT_OPTS='
  --bind ctrl-f:page-down,ctrl-b:page-up
  --color=light,fg:232,bg:255,bg+:116,info:27
'

#PATH
PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
PATH="/usr/local/heroku/bin:$PATH"

#thefuck
eval $(thefuck --alias)


#alias
alias disk='df -hl'
alias sudo='sudo '
alias lm='ls -al'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias vi=nvim
alias vim=nvim
alias uusbc='udisksctl unmount -b /dev/sdc1 && udisksctl power-off -b /dev/sdc'
alias note="cd $home/code/Dropbox/Note && tree"

export PROMPT_COMMAND="history -a"

#source
export Src="$home/code/dotfiles/src"
source /etc/profile.d/autojump.bash
source $Src/jieya.sh
source $Src/hardware.sh
source $Src/install-fonts.sh

restart() {
    . ~/.bashrc
}

#vscode
code() {
 # visual-studio-code $1 &> /dev/null
  visual-studio-code "$@" &> /dev/null &
  disown
}

### mount ntfs
ntfs() {
    case $1 in
        c) [ ! -e /media/c/ ] && sudo mkdir -p /media/c; sudo ntfs-3g /dev/sda3 /media/c ;;
        #d) [ ! -e /media/d/ ] && sudo mkdir -p /media/d; sudo ntfs-3g /dev/sdb1 /media/d ;;
        uc) sudo umount /media/c ;;
        #ud) sudo umount /media/d ;;
        *) echo "Usage: ntfs {c,uc}"
    esac
}

checknet() {
    ping -c 4 114.114.114.114
    echo -e "\n"
    tcping www.google.com 443
}

update() {
    yaourt -Syua
    nvim +PlugUpgrade +PlugUpdate
}

syscheck() {
    systemd-analyze
    echo -e "\nJournal Errors"
    journalctl -p 3 -xb
    echo -e "\nsytemd failed"
    systemctl --failed
}

format() {
    sed -i -e 's/[ \t]*$//' -e 's/\t/    /g' "$@"
    for each in "$@"
    do
        if [[ "$each" = *.c ]]; then
            astyle --style=kr -n "$each"
        fi
    done
}
